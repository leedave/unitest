#!/usr/bin/env php
<?php

//This nifty code converts PHP Errors from old functions into Exceptions for 
//better Handling
set_error_handler(function($errno, $errstr, $errfile, $errline){ 
    if (!(error_reporting() & $errno)) {
        return;
    }
    
    throw new \ErrorException($errstr, $errno, 0, $errfile, $errline);

});

//This allows unitest to be run in bash
$composerAutoloader = __DIR__ . '/../../autoload.php';
if (!file_exists($composerAutoloader)) {
    $composerAutoloader = __DIR__ . '/../autoload.php';
}
if (!file_exists($composerAutoloader)) {
    echo "\nOh crap, I can't find the composer autoloader, please check if you've "
    . "installed unitest correctly.\n\n";
    die();
}

require_once $composerAutoloader;

echo "\n"
. "Thanks for using unitest, you're so damn cool"
. "\n\n";

if (!class_exists('\\Leedch\\Unitest\\Unitest')) {
    echo "\n"
    . "HEEeeelllp, I can't find the unitest repository, check if composer has "
            . "been run correctly.\n\n";
    die();
}

$unitest = new \Leedch\Unitest\Unitest();
echo $unitest->runFromBash($argv);

//It is best practice to reset error handling when finished
restore_error_handler();